package com.demo.leetcode;

//ÁªôÂá∫‰∏§‰∏™ ÈùûÁ©∫ ÁöÑÈìæË°®Áî®Êù•Ë°®Á§∫‰∏§‰∏™ÈùûË¥üÁöÑÊï¥Êï∞„ÄÇÂÖ∂‰∏≠ÔºåÂÆÉ‰ª¨ÂêÑËá™ÁöÑ‰ΩçÊï∞ÊòØÊåâÁÖß ÈÄÜÂ∫è ÁöÑÊñπÂºèÂ≠òÂÇ®ÁöÑÔºåÂπ∂‰∏îÂÆÉ‰ª¨ÁöÑÊØè‰∏™ËäÇÁÇπÂè™ËÉΩÂ≠òÂÇ® ‰∏Ä‰Ωç Êï∞Â≠ó„ÄÇ
//
// Â¶ÇÊûúÔºåÊàë‰ª¨Â∞ÜËøô‰∏§‰∏™Êï∞Áõ∏Âä†Ëµ∑Êù•ÔºåÂàô‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÈìæË°®Êù•Ë°®Á§∫ÂÆÉ‰ª¨ÁöÑÂíå„ÄÇ
//
// ÊÇ®ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞ÈÉΩ‰∏ç‰ºö‰ª• 0 ÂºÄÂ§¥„ÄÇ
//
// Á§∫‰æãÔºö
//
// ËæìÂÖ•Ôºö(2 -> 4 -> 3) + (5 -> 6 -> 4)
//ËæìÂá∫Ôºö7 -> 0 -> 8
//ÂéüÂõ†Ôºö342 + 465 = 807
//
// Related Topics ÈìæË°® Êï∞Â≠¶
// üëç 5100 üëé 0

import lombok.val;

/**
 * @author lin.wang
 * @date 2020/10/16
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int value1 = getIntValue(l1);
        int value2 = getIntValue(l2);
        int value3 = value1 + value2;
        System.out.println(value3);
        return l1;
    }

    private int getIntValue(ListNode l1) {
        int tempData = 0;
        int returnData = 0;
        returnData += getOneValue(l1, 0, tempData);
        return returnData;
    }

    private int getOneValue(ListNode l1, int number, int tempData) {
        int value = l1.val;
        int realValue = value * (int) Math.pow(10, number);
        if (l1.next != null) {
            tempData += realValue;
            return getOneValue(l1.next, ++number, tempData);
        }
        tempData += realValue;
        return tempData;
    }

    public static void main(String[] args) {
        ListNode listNode1 = new ListNode(2, new ListNode(4, new ListNode(3, null)));

        ListNode listNode2 = new ListNode(5, new ListNode(6, new ListNode(4, null)));

        ListNode listNode3 = new Solution().addTwoNumbers(listNode1, listNode2);

        System.out.println(listNode3);
    }
}

class ListNode {
    int val;
    ListNode next;

    ListNode() {
    }

    ListNode(int val) {
        this.val = val;
    }

    ListNode(int val, ListNode next) {
        this.val = val;
        this.next = next;
    }
}
